# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.common import InvalidSelectorException, NoSuchElementException
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestLoginingresoHappy():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()

  def test_loginingresoHappy(self):

    self.driver.get("https://www.casinoatlanticcity.com/")
    # 2 | setWindowSize | 1065x817 |
    self.driver.maximize_window()
    # 3 | click | INGRESAR
    header = self.driver.find_element(By.CSS_SELECTOR, "header")
    buttons = header.find_elements(By.CSS_SELECTOR, "a")
    for button in buttons:
      if button.text == "INGRESAR":
        button.click()
        time.sleep(5)

    # 4 Seleccionar ir a casino
    wait = WebDriverWait(self.driver, 60)
    target_button = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".cardDondeVamosCasino > button")))
    target_button.click()

    self.driver.find_element(By.ID, "username_aside").send_keys("PruebasFide1")
    self.driver.find_element(By.ID, "password_aside").send_keys("Fide2021")
    self.driver.find_element(By.ID, "login_button_aside").click()
    time.sleep(10)
    try:
      wait = WebDriverWait(driver=self.driver, timeout=10)
      modal = wait.until(EC.visibility_of_element_located((By.ID, "formEliminarBono")))
      modal.find_element(By.LINK_TEXT, "ACTIVAR LUEGO").click()
      flag_modal = True

      wait = WebDriverWait(driver=self.driver, timeout=10)
      modal = wait.until(EC.visibility_of_element_located((By.ID, "popupContent")))

      flag_modal_2 = True
      links = modal.find_elements(By.CSS_SELECTOR, "a")
      for link in links:
        if link.text == "ENTENDIDO":
          link.click()
          time.sleep(10)

    except (Exception, NoSuchElementException) as e:

      print(self.trace_helper.get_trace_str(e))

    time.sleep(10)
    sodesktop = self.driver.find_element(By.CSS_SELECTOR, ".show-only--desktop")
    buttonmenu = sodesktop.find_element(By.ID, "iconMenuHeader").click()

    try:
      # self.driver.find_element(By.ID,"gtm--menu-aside-promociones")
      aside = self.driver.find_element(By.CSS_SELECTOR, ".o-aside.fixed-left")
      prombuttons = aside.find_elements(By.CSS_SELECTOR, "a")
      for buttonmen in prombuttons:
        if buttonmen.text == "PROMOCIONES":
          buttonmen.click()
          time.sleep(10)
    except (Exception, StopIteration) as e:
      print(f"{e}")

    promociones = self.driver.find_element(By.CSS_SELECTOR, ".col-12.mb-0")
    mispromociones = promociones.find_elements(By.CSS_SELECTOR, "a")
    for buttonmen in mispromociones:
      if buttonmen.text == "menu":
        buttonmen.click()


test_login_ingreso_happy = TestLoginingresoHappy()