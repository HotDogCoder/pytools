# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

from core.util.debug.trace_helper import TraceHelper


class TestRegisrropaciente():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

        self.driver2 = webdriver.Chrome()
        self.vars = {}

        self.trace_helper = TraceHelper()

    def teardown_method(self, method):
        self.driver.quit()

    def test_registropaciente(self):
        self.trace_helper.log(text="<html>")
        self.trace_helper.log(text="<body>")
        self.trace_helper.log(text="--------------------------")
        self.trace_helper.log(text="EVALUCAION COMPARATIVA DE PRE Y PRO CASINO ONLINE")
        self.trace_helper.log(text="--------------------------")
        # Test name: Regisrro paciente
        # Step # | name | target | value
        # 1 | open | https://his-qas.tigmed.com.pe/person/patient |
        self.driver.get("https://www.casinoatlanticcity.com/")
        self.driver2.get("https://revamp.casinoatlanticcity.com")
        self.driver.maximize_window()
        self.driver2.maximize_window()

        self.trace_helper.log(text="-------------------------- </br>")
        self.trace_helper.log(text="TITULO PRINCIPAL <br/>")
        texto1 = self.driver.find_element(By.XPATH, "/html/body/main/div[3]/section/section-seo-content/div/div/p[1]")
        texto2 = self.driver2.find_element(By.XPATH, "/html/body/main/div[3]/section/section-seo-content/div/div/p[1]")
        swiper_wrapper1 = self.driver.find_element(By.CSS_SELECTOR, ".swiper-wrapper")
        swiper_wrapper2 = self.driver2.find_element(By.CSS_SELECTOR, ".swiper-wrapper")
        imagenes_1 = swiper_wrapper1.find_elements(By.CSS_SELECTOR, ".boxSlider")
        imagenes_2 = swiper_wrapper2.find_elements(By.CSS_SELECTOR, ".boxSlider")

        # extraer el texto y la imagen de cada elemento
        texto1_str = texto1.text
        self.trace_helper.log(text="-------------------------- <br/>")
        self.trace_helper.log(text=f"PRO: {texto1_str} <br/>")
        texto2_str = texto2.text
        self.trace_helper.log(text=f"REVAMP: {texto2_str} <br/>")

        self.trace_helper.log(text="============> <br/>")

        # comparar el texto y la imagen
        if texto1_str == texto2_str:
            self.trace_helper.log(text=f"CORRECTO: el texto es igual <br/>")
        else:
            self.trace_helper.log(text=f"ERROR: el texto es distinto <br/>")

        self.trace_helper.log(text="-------------------------- <br/>")
        self.trace_helper.log(text="IMAGENES DEL BANNER <br/>")
        self.trace_helper.log(text="-------------------------- <br/>")
        for index, img in enumerate(imagenes_1):

            imagen1_src = self.trace_helper.extract_url_from_styles(img.get_attribute('style'))
            if imagen1_src != "ERROR":
                # imagen1_src = imagen1_src.replace('\\', '/')
                self.trace_helper.log(text=f'PRO: <br/>'
                                           f'LINK:¨{imagen1_src} <br/>'
                                           f'<img width="200" src={imagen1_src}/> <br/>')
            imagen2_src = self.trace_helper.extract_url_from_styles(imagenes_2[index].get_attribute('style'))
            if imagen2_src != "ËRROR":
                # imagen2_src = imagen2_src.replace('\\', '/')
                self.trace_helper.log(text=f'REVAMP: <br/>'
                                           f'LINK:¨{imagen2_src} <br/>'
                                           f'<img width="200" '
                                           f' src={imagen2_src}'
                                           f'/> <br/>')
            if imagen1_src != "ERROR" and imagen2_src != "ERROR":

                if imagen1_src == imagen2_src:
                    self.trace_helper.log('LINKS COINCIDEN <br/>')
                else:
                    self.trace_helper.log('ADVERTENCIA:¨LINKS DISTINTOS <br/>')

        self.trace_helper.log(text="-------------------------- <br/>")
        self.trace_helper.log(text="<body/>")
        self.trace_helper.log(text="<html/>")

        self.driver.quit()
        self.driver2.quit()




test_registropaciente = TestRegisrropaciente